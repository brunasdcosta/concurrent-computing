Java Concurrency Stress Tests
---------------------------------------------------------------------------------
Rev: c47e39dc3faf949c, built by shade with 11.0.13-testing at 2021-06-23T09:17:40Z

Burning up to figure out the exact CPU count....... done!

Probing the target OS:
 (all failures are non-fatal, but may affect testing accuracy)

----- [OK] Trying to set global affinity with taskset
----- [OK] Trying to set per-thread affinity with syscalls

Initializing and probing the target VM:
 (all failures are non-fatal, but may affect testing accuracy)

----- [OK] Unlocking diagnostic VM options
----- [OK] Disabling performance data collection
----- [OK] Checking for C1 availability
----- [OK] Checking for C2 availability
----- [OK] Trimming down the VM heap size to 256M
----- [OK] Trimming down the number of parallel GC threads
----- [OK] Trimming down the number of concurrent GC threads
----- [OK] Trimming down the number of G1 concurrent refinement GC threads
----- [OK] Trimming down the number of compiler threads
----- [OK] Testing @Contended works on all results and infra objects
----- [OK] Unlocking debug information for non-safepoints
----- [OK] Unlocking C2 local code motion randomizer
----- [OK] Unlocking C2 global code motion randomizer
----- [N/A] Unlocking C2 iterative global value numbering randomizer
Unrecognized VM option 'StressIGVN'
Error: Could not create the Java Virtual Machine.
Error: A fatal exception has occurred. Program will exit.

----- [N/A] Unlocking C2 conditional constant propagation randomizer
Unrecognized VM option 'StressCCP'
Error: Could not create the Java Virtual Machine.
Error: A fatal exception has occurred. Program will exit.

----- [OK] Testing allocation profiling
----- [OK] Testing Thread.onSpinWait
----- [OK] Testing PrintAssembly
----- [OK] Testing compiler directives

Probing what VM configurations are available:
 (failures are non-fatal, but may miss some interesting cases)
 (split compilation is requested and compiler directives are available)

----- [OK] [-Xms2G, -Xmx6G, -Dfile.encoding=UTF-8]
----- [OK] [-Xms2G, -Xmx6G, -Dfile.encoding=UTF-8, -XX:+StressLCM, -XX:+StressGCM]

Detecting CPU topology and computing scheduling classes:
  Linux, using /sys/devices/system/cpu
  1 package, 4 cores per package, 2 threads per core

  CPU lists:
    Package #0, Core #0, Threads: 0, 4
    Package #0, Core #1, Threads: 1, 5
    Package #0, Core #2, Threads: 2, 6
    Package #0, Core #3, Threads: 3, 7

  Scheduling classes for matching tests:
    1 actors:
      (PG 0, CG 0)

  Test configuration:
    Test preset mode: "default"
    Hardware CPUs in use: 8
    Spinning style: Thread.onSpinWait()
    Test selection: ".*"
    Forks per test: 1
    Iterations per fork: 5
    Time per iteration: 1000 ms
    Test stride: 40 strides x 256 tests, but taking no more than 128 Mb
    Test result blob: "jcstress-results-2021-07-23-21-52-33.bin.gz"
    Test results: "results/"

  Attached the non-interactive output stream.
  Printing the progress line at most every 15000 milliseconds.

(ETA: in 00:00:15; at sex, 2021-07-23 21:53:00)
(Sampling Rate: 239,97 #/sec)
(JVMs: 0 starting, 0 running, 0 finishing)
(CPUs: 0 actor, 0 system, 0 total)
(Results: 4 planned; 1 passed, 0 failed, 0 soft errs, 0 hard errs)

(ETA: now)
(Sampling Rate: 845,91 #/sec)
(JVMs: 0 starting, 0 running, 0 finishing)
(CPUs: 0 actor, 0 system, 0 total)
(Results: 4 planned; 4 passed, 0 failed, 0 soft errs, 0 hard errs)



RUN RESULTS:
  Interesting tests: No matches.

  Failed tests: No matches.

  Error tests: No matches.

  All remaining tests: 1 matching test results. Use -v to print them.

  HTML report generated at /home/bruna/workspace/concurrent-computing/best-matching/results/index.html

